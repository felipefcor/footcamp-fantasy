var cov_1b9f9owkf3=function(){var path="/home/felipe/bootcamp/collab/skylab-bootcamp-201907/staff/felipe-fernandez/footcamp/footcamp-api/logic/user/update/index.js";var hash="5f454d7aaac8f49759a5c76c92496181a55ae627";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/felipe/bootcamp/collab/skylab-bootcamp-201907/staff/felipe-fernandez/footcamp/footcamp-api/logic/user/update/index.js",statementMap:{"0":{start:{line:1,column:19},end:{line:1,column:44}},"1":{start:{line:2,column:29},end:{line:2,column:53}},"2":{start:{line:13,column:0},end:{line:24,column:1}},"3":{start:{line:14,column:4},end:{line:14,column:29}},"4":{start:{line:16,column:4},end:{line:23,column:8}},"5":{start:{line:18,column:21},end:{line:18,column:78}},"6":{start:{line:20,column:8},end:{line:20,column:68}},"7":{start:{line:20,column:19},end:{line:20,column:68}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:17},end:{line:13,column:18}},loc:{start:{line:13,column:46},end:{line:24,column:1}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:16,column:12},end:{line:16,column:13}},loc:{start:{line:16,column:24},end:{line:23,column:5}},line:16}},branchMap:{"0":{loc:{start:{line:20,column:8},end:{line:20,column:68}},type:"if",locations:[{start:{line:20,column:8},end:{line:20,column:68}},{start:{line:20,column:8},end:{line:20,column:68}}],line:20}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"5f454d7aaac8f49759a5c76c92496181a55ae627"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{validate}=(cov_1b9f9owkf3.s[0]++,require('footcamp-utils'));const{models:{User}}=(cov_1b9f9owkf3.s[1]++,require('footcamp-data'));/**
 * Update user informtaion
 
 * @param {*} id
 * @param {*} fieldsToUpdate 
 * 
* @returns {Promise}
*/cov_1b9f9owkf3.s[2]++;module.exports=function(id,fieldsToUpdate){cov_1b9f9owkf3.f[0]++;cov_1b9f9owkf3.s[3]++;validate.string(id,'id');cov_1b9f9owkf3.s[4]++;return(async()=>{cov_1b9f9owkf3.f[1]++;const user=(cov_1b9f9owkf3.s[5]++,await User.findByIdAndUpdate(id,{$set:fieldsToUpdate}));cov_1b9f9owkf3.s[6]++;if(!user){cov_1b9f9owkf3.b[0][0]++;cov_1b9f9owkf3.s[7]++;throw Error(`User with id ${id} does not exist.`);}else{cov_1b9f9owkf3.b[0][1]++;}})();};