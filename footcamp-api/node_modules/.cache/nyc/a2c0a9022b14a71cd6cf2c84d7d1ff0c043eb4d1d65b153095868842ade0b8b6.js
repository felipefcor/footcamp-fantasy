var cov_ut4uoe8d3=function(){var path="/home/felipe/bootcamp/collab/skylab-bootcamp-201907/staff/felipe-fernandez/footcamp/footcamp-api/logic/user/retrieve/index.js";var hash="62ac530dac58cf38e4927c57291ca9b2eb1c65a8";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/felipe/bootcamp/collab/skylab-bootcamp-201907/staff/felipe-fernandez/footcamp/footcamp-api/logic/user/retrieve/index.js",statementMap:{"0":{start:{line:1,column:19},end:{line:1,column:44}},"1":{start:{line:2,column:29},end:{line:2,column:53}},"2":{start:{line:17,column:0},end:{line:27,column:1}},"3":{start:{line:19,column:4},end:{line:19,column:29}},"4":{start:{line:21,column:4},end:{line:26,column:8}},"5":{start:{line:22,column:21},end:{line:22,column:92}},"6":{start:{line:23,column:8},end:{line:23,column:68}},"7":{start:{line:23,column:19},end:{line:23,column:68}},"8":{start:{line:24,column:8},end:{line:24,column:20}},"9":{start:{line:25,column:8},end:{line:25,column:19}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:17},end:{line:17,column:18}},loc:{start:{line:17,column:30},end:{line:27,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:21,column:12},end:{line:21,column:13}},loc:{start:{line:21,column:24},end:{line:26,column:5}},line:21}},branchMap:{"0":{loc:{start:{line:23,column:8},end:{line:23,column:68}},type:"if",locations:[{start:{line:23,column:8},end:{line:23,column:68}},{start:{line:23,column:8},end:{line:23,column:68}}],line:23}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"62ac530dac58cf38e4927c57291ca9b2eb1c65a8"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{validate}=(cov_ut4uoe8d3.s[0]++,require('footcamp-utils'));const{models:{User}}=(cov_ut4uoe8d3.s[1]++,require('footcamp-data'));/**

/**
 * Retrieve user's information

 * @param {*} name 
 * @param {*} surname 
 * @param {*} email 
 * @param {*} password 
 * @param {*} repassword 
 * 
 * @returns {Promise}
*/cov_ut4uoe8d3.s[2]++;module.exports=function(id){cov_ut4uoe8d3.f[0]++;cov_ut4uoe8d3.s[3]++;validate.string(id,'id');cov_ut4uoe8d3.s[4]++;return(async()=>{cov_ut4uoe8d3.f[1]++;const user=(cov_ut4uoe8d3.s[5]++,await User.findOne({_id:id},{_id:0,password:0,__v:0}).lean());cov_ut4uoe8d3.s[6]++;if(!user){cov_ut4uoe8d3.b[0][0]++;cov_ut4uoe8d3.s[7]++;throw Error(`User with id ${id} does not exist.`);}else{cov_ut4uoe8d3.b[0][1]++;}cov_ut4uoe8d3.s[8]++;user.id=id;cov_ut4uoe8d3.s[9]++;return user;})();};